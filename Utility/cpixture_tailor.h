/**************************************************************************
File:         cpixture_tailor.h
Author:       Song Xiaofeng
Date:         2016-05-16
Description:
**************************************************************************/
#pragma once
#include <QDialog>
#include "ui_cpixture_tailor.h"
#include <QPixmap>
#include <QGraphicsView>
#include <QGraphicsScene>
#include <QGraphicsPixmapItem>
#include <QGraphicsRectItem>
#include <QWheelEvent>
#include <QMouseEvent>
#include <QPointF>
//////////////////////////////////////////////////////////////////
///    Class:  CPixScene
///    Brief:  
//////////////////////////////////////////////////////////////////
class CPixScene : public QGraphicsScene {
	Q_OBJECT
		///////////////////////////////////////////////////////////////////
		//all public functions are here
		///////////////////////////////////////////////////////////////////
public:
	CPixScene(QWidget* parent = 0);
	///////////////////////////////////////////////////////////////////
	//all signals are here
	///////////////////////////////////////////////////////////////////
signals:

	///////////////////////////////////////////////////////////////////
	//all private functions are here
	///////////////////////////////////////////////////////////////////
private:
	//void mBuildConnects();
	//void wheelEvent(QWheelEvent* event);
	//void mousePressEvent(QMouseEvent * event);
	//void mouseReleaseEvent(QMouseEvent * event);
	//void dragEnterEvent(QDragEnterEvent *event);
	//void dropEvent(QDropEvent *event);
	//void dragMoveEvent(QDragMoveEvent *event);

	///////////////////////////////////////////////////////////////////
	//all properties are here
	///////////////////////////////////////////////////////////////////
private:

};
//////////////////////////////////////////////////////////////////
///    Class:  CPixView
///    Brief:  
//////////////////////////////////////////////////////////////////
class CPixView : public QGraphicsView {
	Q_OBJECT
		///////////////////////////////////////////////////////////////////
		//all public functions are here
		///////////////////////////////////////////////////////////////////
public:
	CPixView(QWidget* parent = 0);
	void setPixScene(CPixScene* scene) { m_scene = scene; }
	QRect tailedRect() { return m_rect->rect().toRect(); }
	bool hasTailed() { return m_hasTailed; }
	///////////////////////////////////////////////////////////////////
	//all signals are here
	///////////////////////////////////////////////////////////////////
signals:
	
	///////////////////////////////////////////////////////////////////
	//all private functions are here
	///////////////////////////////////////////////////////////////////
private:
	void wheelEvent(QWheelEvent* event);
	void mousePressEvent(QMouseEvent * event);
	void mouseReleaseEvent(QMouseEvent * event);
	void mouseMoveEvent(QMouseEvent *event);
	///////////////////////////////////////////////////////////////////
	//all properties are here
	///////////////////////////////////////////////////////////////////
private:
	QPointF m_startPoint;
	QPointF m_endPoint;
	QGraphicsRectItem * m_rect;
	bool m_isStart;
	bool m_hasTailed;
	CPixScene * m_scene;
};
//////////////////////////////////////////////////////////////////
///    Class:  CPixtureTailor
///    Brief:  
//////////////////////////////////////////////////////////////////
class CPixtureTailor : public QDialog {
	Q_OBJECT
///////////////////////////////////////////////////////////////////
//all public functions are here
///////////////////////////////////////////////////////////////////
public:
	CPixtureTailor(QWidget * parent = Q_NULLPTR);
	~CPixtureTailor();
	void setPixmap(QPixmap  pix);
	QRect pixRect() { return m_pixRect; }
///////////////////////////////////////////////////////////////////
//all public signals are here
///////////////////////////////////////////////////////////////////
signals:
	void signal_tailed_done(QPixmap pix);
///////////////////////////////////////////////////////////////////
//all private functions are here
///////////////////////////////////////////////////////////////////
private:
	void accept();
	void mInitUI();
///////////////////////////////////////////////////////////////////
//all properties are here
///////////////////////////////////////////////////////////////////
private:
	Ui::CPixtureTailor ui;
	QPixmap  m_pix;
	bool m_done;
	CPixView * m_view;
	CPixScene * m_scene;
	QGraphicsPixmapItem * m_pixItem;
	QRect m_pixRect;
};
